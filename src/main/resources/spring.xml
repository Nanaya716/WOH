<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		https://www.springframework.org/schema/beans/spring-beans.xsd
		       http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context.xsd
               http://www.springframework.org/schema/mvc
               http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--1.Spring和MyBatis整合步骤-->
    <!--(1)扫包-->
    <context:component-scan base-package="com.jxc"/>
    <!--(2)加载配置文件内容-->
    <context:property-placeholder location="classpath*:db.properties"/>
    <!--(3)创建SqlSessionFactoryBean对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--<property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <property name="cacheEnabled" value="true"/>
            </bean>
        </property>-->
    </bean>
    <!--(4)配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--(5)扫Dao包，创建并加载Dao实现类对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jxc.dao"/>
    </bean>
    <!--(6)事务管理-->
    <!--(7)AOP切面定义-->

    <!--2.整合SpringMVC框架-->
    <!--(1)开启mvc注解驱动-->
    <mvc:annotation-driven conversion-service="conversionService">
        <!--消息转化器，防止fastjson内容出现中文乱码-->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--(2)静态资源放行-->
    <mvc:default-servlet-handler />
    <!--(3)视图解析器-->
    <mvc:view-resolvers>
        <mvc:jsp prefix="WEB-INF/pages/" suffix=".jsp"/>
    </mvc:view-resolvers>
    <!--(4)多部件解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
    <!--(5)注册拦截器-->
<!--    <mvc:interceptors>-->
<!--        &lt;!&ndash; 国际化操作拦截器 如果采用基于（Session/Cookie）则必需配置 &ndash;&gt;-->
<!--        <bean  class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--            <mvc:exclude-mapping path="/toLogin"/>-->
<!--            <mvc:exclude-mapping path="/login"/>-->
<!--            <mvc:exclude-mapping path="/login.jsp"/>-->
<!--            <bean class="com.jxc.interceptor.AuthInterceptor"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
    <!--(6)数据格式化工厂定义-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--注册自定义格式化类-->
        <property name="formatters">
            <set>
                <bean class="com.jxc.formatter.DateFormatter">
                    <constructor-arg name="pattern" value="yyyy-MM-dd"/>
                </bean>
            </set>
        </property>
        <!--注册自定义类型转换器-->
        <property name="converters">
            <set>
                <bean class="com.jxc.converter.StringToBooleanConverter">
                    <constructor-arg name="trueStr">
                        <list>
                            <value>t</value>
                            <value>y</value>
                            <value>1</value>
                        </list>
                    </constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    <!--(7)国际化本地解析器-->
    <!--设置国际化绑定资源文件名称-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>message</value>
            </list>
        </property>
    </bean>
    <!-- 方式一：AcceptHeaderLocaleResolver因为是默认的区域语言解析器，可以不配置。只需要修改请求头设置Accept-Language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7 -->
    <!--<bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"></bean>-->
    <!-- 方式二：SessionLocaleResolver配置 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
    <!-- 方式三：CookieLocaleResolver配置 -->
    <!--<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"></bean>-->


</beans>