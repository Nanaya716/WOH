<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxc.dao.StockDao">

    <resultMap type="com.jxc.entity.Stock" id="StockMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="quantity" column="quantity" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="StockMap">
        select
          id, product_id, quantity, update_time
        from stock
        where id = #{id}
    </select>

    <select id="queryByProductId" resultMap="StockMap">
        select
            id, product_id, quantity, update_time
        from stock
        where product_id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="StockMap">
        select
          id, product_id, quantity, update_time
        from stock
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="quantity != null">
                and quantity = #{quantity}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from stock
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="quantity != null">
                and quantity = #{quantity}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into stock(product_id, quantity, update_time)
        values (#{productId}, #{quantity}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into stock(product_id, quantity, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.productId}, #{entity.quantity}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into stock(product_id, quantity, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productId}, #{entity.quantity}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        product_id = values(product_id),
        quantity = values(quantity),
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update stock
        <set>
            <if test="productId != null">
                product_id = #{productId},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from stock where id = #{id}
    </delete>

    <delete id="deleteByProductId">
        delete from stock where product_id = #{id}
    </delete>
</mapper>

